{
  "openapi": "3.0.1",
  "info": {
    "title": "EmployeeManagement",
    "version": "1.0"
  },
  "paths": {
    "/api/auth/Employee/login": {
      "post": {
        "tags": [
          "Employee"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeLogin"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeLogin"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeLogin"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/auth/Employee/register": {
      "post": {
        "tags": [
          "Employee"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Employees"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Employees"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Employees"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/auth/Employee/delete/{employeeId}": {
      "delete": {
        "tags": [
          "Employee"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/auth/Employee/getEmployee/{employeeId}": {
      "get": {
        "tags": [
          "Employee"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/auth/Employee/allEmployees": {
      "get": {
        "tags": [
          "Employee"
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/auth/Employee/update/{employeeId}": {
      "put": {
        "tags": [
          "Employee"
        ],
        "parameters": [
          {
            "name": "employeeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateEmployee"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateEmployee"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateEmployee"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/WeatherForecast": {
      "get": {
        "tags": [
          "WeatherForecast"
        ],
        "operationId": "GetWeatherForecast",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "EmployeeLogin": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Employees": {
        "required": [
          "email",
          "fullName",
          "passwordHash",
          "role",
          "ssn"
        ],
        "type": "object",
        "properties": {
          "employeeId": {
            "type": "integer",
            "format": "int64"
          },
          "fullName": {
            "maxLength": 40,
            "minLength": 0,
            "pattern": "^[a-zA-Z\\s]+$",
            "type": "string"
          },
          "email": {
            "maxLength": 50,
            "minLength": 0,
            "pattern": "^[a-zA-Z0-9_.+-]+@(gmail\\.com|yahoo\\.com|outlook\\.com)$",
            "type": "string",
            "format": "email"
          },
          "ssn": {
            "minLength": 1,
            "pattern": "^(?!000|666|9\\d{2})\\d{3}-(?!00)\\d{2}-(?!0000)\\d{4}$",
            "type": "string"
          },
          "passwordHash": {
            "maxLength": 16,
            "minLength": 0,
            "pattern": "^(?=.*[A-Z])(?=.*[a-z])(?=.*\\d)(?=.*[!@#$%^&*()_+\\-=\\[\\]{};':\",.<>/?\\\\|]).{8,}$",
            "type": "string"
          },
          "role": {
            "maxLength": 10,
            "minLength": 0,
            "pattern": "^[a-zA-Z\\s]+$",
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "UpdateEmployee": {
        "type": "object",
        "properties": {
          "employeeId": {
            "type": "integer",
            "format": "int64"
          },
          "fullName": {
            "maxLength": 40,
            "minLength": 0,
            "pattern": "^[a-zA-Z\\s]+$",
            "type": "string",
            "nullable": true
          },
          "email": {
            "maxLength": 50,
            "minLength": 0,
            "pattern": "^[a-zA-Z0-9_.+-]+@(gmail\\.com|yahoo\\.com|outlook\\.com)$",
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "ssn": {
            "pattern": "^(?!000|666|9\\d{2})\\d{3}-(?!00)\\d{2}-(?!0000)\\d{4}$",
            "type": "string",
            "nullable": true
          },
          "passwordHash": {
            "maxLength": 16,
            "minLength": 0,
            "pattern": "^(?=.*[A-Z])(?=.*[a-z])(?=.*\\d)(?=.*[!@#$%^&*()_+\\-=\\[\\]{};':\",.<>/?\\\\|]).{8,}$",
            "type": "string",
            "nullable": true
          },
          "role": {
            "maxLength": 10,
            "minLength": 0,
            "pattern": "^[a-zA-Z\\s]+$",
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WeatherForecast": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date"
          },
          "temperatureC": {
            "type": "integer",
            "format": "int32"
          },
          "temperatureF": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "summary": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "Enter 'Bearer' [space] and then your token.",
        "scheme": "Bearer"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}